# general settings for image SR training
name: MambaIR_CC
model_type: ImageCleanModel
num_gpu: 2
manual_seed: 10

# dataset and data loader settings
datasets:
  train:
    task: CC
    name: ColorCheckerDataset
    type: ColorCheckerDataset
    dataroot_gt: /data/czx/datasets/CC/train/gt_corrected/
    dataroot_img: /data/czx/datasets/CC/train/linear_images/
    dataroot_label: /data/czx/datasets/CC/metadata.txt
    img_size: [256,256]
    gt_size: 512

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 1

  val:
    name: CC
    type: ColorCheckerDataset
    dataroot_gt: /data/czx/datasets/CC/val/gt_corrected/
    dataroot_img: /data/czx/datasets/CC/val/linear_images
    dataroot_label: /data/czx/datasets/CC/metadata.txt
    img_size: [256,256]
# network structures
network_g:
  type: MambaIRUNet
  upscale: 1
  in_chans: 3
  img_size: 64
  img_range: 1.
  d_state: 16
  depths: [6, 6, 6, 6, 6, 6]
  embed_dim: 180
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  optim_g:
    type: Adam
    #lr: !!float 2e-4
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [250000, 400000, 450000, 475000]
    #milestones: [5000, 10000, 15000, 20000，25000，30000，35000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: AngularLoss
    loss_weight: 1.0
    reduction: mean
# validation settings
val:
  val_freq: !!float 5e3
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true



# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~
